# heatmap
rownames(mat) <- station_labels
colnames(mat) <- station_labels
heatmap_dat <- mat %>%
apply(1, function(x) {x/sum(x)}) %>%
t() %>%
melt() %>%
rename(from = Var1, to = Var2) %>%
mutate(indexto = rep(1:13, each = 13),
indexfrom = rep(1:13, 13),
from = factor(from, levels = rev(station_labels), ordered = T)) %>%
mutate(isSB = ifelse(indexfrom == indexto, NA, indexfrom < indexto),
value = ifelse(value == 0, NA, value))
p2 <- ggplot(heatmap_dat) +
geom_tile(aes(to, from, fill = value), alpha = 0.8, color = "white", size = 2) +
theme_classic() +
theme(legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 0, colour = "grey50"),
axis.title.x = element_text(hjust = 1, margin = margin(t = -15, unit = "pt"), size = 12),
axis.title.y = element_text(hjust = 1, margin = margin(b = 50, unit = "pt"), size = 12)) +
scale_x_discrete(position = "top") +
scale_fill_continuous(low = "grey90", high = "steelblue", na.value = "black", breaks = 0.05*0:5, labels = percent, limits = c(0, 0.25)) +
scale_color_discrete(na.value = "white") +
guides(alpha = FALSE) +
coord_fixed() +
labs(fill = "Percent traffic \nfrom origin \nto destination",
x = "Destination",
y = "Origin")
mintime_label <- paste0(str_pad(mintime, width = 2, side = "left", pad = "0"), "00")
maxtime_label <- paste0(str_pad(maxtime, width = 2, side = "left", pad = "0"), "00")
title <- cowplot::ggdraw() +
cowplot::draw_label(sprintf("Passenger flow between %s and %s", mintime_label, maxtime_label), fontface='bold', hjust = 1, size = 16)
cowplot::plot_grid(p1, p2, ncol = 2, rel_widths = c(0.3, 0.8), scale = c(1,1)) %>%
{cowplot::plot_grid(title, ., ncol = 1, rel_heights = c(0.1, 1), rel_widths = c(1, 1))}
}
pdf("combinedplots.pdf", width = 11, height = 6)
selectdate <- "08-22-2014"
for (i in 5:22) {
p <- flowplots(mrt, i, i + 1, selectdate)
print(p)
}
dev.off()
mrt_long %>%
spread(key = "mode", value = "value")
mrt_long %>%
spread(key = "mode", value = "value") %>%
glimpse
mrt_long %>%
spread(key = "mode", value = "value") %>%
head()
head(mrt_long)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
mutate(net = entry-exit) %>% head()
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
mutate(net = entry-exit) %>%
group_by(hour) %>%
summarise(net = sum(net)) -> net_util
View(net_util)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
mutate(net = entry-exit) %>%
group_by(day, hour) %>%
summarise(net = sum(net)) %>%
group_by(hour) %>%
summarise(mean_net = mean(net, na.rm = T)) -> net_util
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
mutate(net = entry-exit) %>%
group_by(datetime) %>%
summarise(net = sum(net)) %>%
group_by(hour) %>%
summarise(mean_net = mean(net, na.rm = T)) -> net_util
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
mutate(net = entry-exit) %>%
group_by(datetime) %>%
summarise(net = sum(net), hour = mean(hour)) %>%
group_by(hour) %>%
summarise(mean_net = mean(net, na.rm = T)) -> net_util
View(net_util)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
mutate(net = entry-exit) %>%
group_by(datetime) %>%
summarise(net = sum(net), hour = mean(hour)) %>%
group_by(hour) %>%
summarise(mean_net = mean(net, na.rm = T) %>% floor) -> net_util
View(net_util)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(datetime) %>%
summarise(entry = sum(entry), hour = mean(hour)) %>%
group_by(hour) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) -> net_util
View(net_util)
ggplot(net_util) + geom_line(aes(x = hour, y = entry))
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(datetime) %>%
summarise(entry = sum(entry), hour = mean(hour)) %>%
group_by(hour) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
mutate(cum_entry = cumsum(entry)) -> net_util
ggplot(net_util) + geom_line(aes(x = hour, y = cum_entry))
?ts
ts(net_util$cum_entry, frequency = 12, start = 0)
ts(net_util$cum_entry, frequency = 24, start = 0)
Espline <- splinefun(x = net_util$hour, y = net_util$cum_entry, method = 'natural')
dEdt_spline <- function(t) Espline( t , deriv = 1 )
input <- seq(0, 24, 0.25)
output <- input %>% dEdt_spline()
ggplot() +
geom_line(aes(input, output))
ggplot() +
geom_line(aes(input, output)) +
geom_line(data = net_util, aes(hour, entry))
Espline <- splinefun(x = net_util$hour, y = net_util$cum_entry, method = "periodic")
dEdt_spline <- function(t) Espline( t , deriv = 1 )
input <- seq(0, 24, 0.25)
output <- input %>% dEdt_spline()
ggplot() +
geom_line(aes(input, output)) +
geom_line(data = net_util, aes(hour, entry))
Espline <- splinefun(x = net_util$hour, y = net_util$cum_entry, method = "hmm")
Espline <- splinefun(x = net_util$hour, y = net_util$cum_entry, method = "fmm")
dEdt_spline <- function(t) Espline( t , deriv = 1 )
input <- seq(0, 24, 0.25)
output <- input %>% dEdt_spline()
ggplot() +
geom_line(aes(input, output)) +
geom_line(data = net_util, aes(hour, entry))
Espline <- splinefun(x = net_util$hour, y = net_util$cum_entry, method = "monoH.FC")
dEdt_spline <- function(t) Espline( t , deriv = 1 )
input <- seq(0, 24, 0.25)
output <- input %>% dEdt_spline()
ggplot() +
geom_line(aes(input, output)) +
geom_line(data = net_util, aes(hour, entry))
input <- seq(0, 24, 0.2)
output <- input %>% dEdt_spline()
ggplot() +
geom_line(aes(input, output)) +
geom_line(data = net_util, aes(hour, entry))
input <- seq(0, 24, 0.1)
output <- input %>% dEdt_spline()
ggplot() +
geom_line(aes(input, output)) +
geom_line(data = net_util, aes(hour, entry))
Espline <- splinefun(x = net_util$hour, y = net_util$cum_entry, method = "hyman")
dEdt_spline <- function(t) Espline( t , deriv = 1 )
input <- seq(0, 24, 0.1)
output <- input %>% dEdt_spline()
ggplot() +
geom_line(aes(input, output)) +
geom_line(data = net_util, aes(hour, entry))
output
ggplot() +
geom_line(aes(input, output)) +
geom_point(aes(input, output)) +
geom_line(data = net_util, aes(hour, entry))
output <- input %>% Espline()
ggplot() +
geom_line(aes(input, output)) +
geom_point(aes(input, output)) +
geom_line(data = net_util, aes(hour, cum_entry))
ggplot() +
geom_line(aes(input, output), alpha = 0.1) +
geom_point(aes(input, output)) +
geom_line(data = net_util, aes(hour, cum_entry))
ggplot() +
geom_line(aes(input, output), alpha = 0.01) +
geom_point(aes(input, output)) +
geom_line(data = net_util, aes(hour, cum_entry))
imputed <- tibble(hour = input,
cum_entry = output)
View(imputed)
imputed <- tibble(hour = input,
cum_entry = output) %>%
mutate(entry = c(cum_entry[1], diff(cum_entry)))
View(imputed)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
mutate(cum_entry = cumsum(entry)) -> net_util
View(net_util)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry)) -> net_util
View(net_util)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry)) %>%
select(hour, location, cum_entry) %>%
spread(key = "location", value = "cum_entry") -> net_util
View(net_util)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry)) %>%
select(hour, location, cum_entry) %>%
nest(location) -> net_util
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry)) %>%
select(hour, location, cum_entry) %>%
ungroup() %>%
nest(location) -> net_util
View(net_util)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry)) %>%
select(hour, location, cum_entry) %>%
group_by(location) %>%
nest() -> net_util
View(net_util)
spline_wrapper <- function(df) {
return(splinefun(df$hour, df$cum_entry, method = "hyman"))
}
net_util %>%
group_by(location) %>%
mutate(spline_eqn = map(data, spline_wrapper))
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper))
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper))
spline_wrapper <- function(df) {
return(splinefun(df$hour, df$cum_entry, method = "normal"))
}
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper))
return(splinefun(df$hour, df$cum_entry, method = "natural"))
spline_wrapper <- function(df) {
return(splinefun(df$hour, df$cum_entry, method = "natural"))
}
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper))
return(splinefun(df$hour, df$cum_entry, method = "hyman"))
spline_wrapper <- function(df) {
return(splinefun(df$hour, df$cum_entry, method = "hyman"))
}
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper))
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry)) %>%
select(hour, location, cum_entry) %>%
group_by(location)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry)) %>%
select(hour, location, cum_entry) %>%
group_by(location) %>% View
a <- mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry)) %>%
select(hour, location, cum_entry) %>%
group_by(location)
a %>% filter(is.na(cum_entry))
spline_wrapper <- function(df) {
return(splinefun(df$hour, df$cum_entry, method = "natural"))
}
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper)) %>%
unnest(spline_eqn)
spline_wrapper <- function(df) {
return(splinefun(df$hour, df$cum_entry, method = "natural"))
}
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper)) %>%
unnest(spline_eqn)
spline_wrapper <- function(df) {
Espline <- splinefun(df$hour, df$cum_entry, method = "natural")
return(Espline(seq(0, 23, 0.1)))
}
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper)) %>%
unnest(spline_eqn)
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper)) %>%
unnest(spline_eqn, drop = F)
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper)) %>%
unnest(spline_eqn) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1))
net_util %>%
mutate(spline_eqn = map(data, spline_wrapper)) %>%
unnest(spline_eqn) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1)) -> impute_util
net_util %>%
mutate(impute_entry = map(data, spline_wrapper)) %>%
unnest(impute_entry) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1)) -> impute_util
ggplot(net_util) +
geom_line(aes(hour, impute_entry, col = location))
net_util %>%
mutate(impute_entry = map(data, spline_wrapper)) %>%
unnest(impute_entry) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1)) -> impute_util
ggplot(impute_util) +
geom_line(aes(hour, impute_entry, col = location))
spline_wrapper <- function(df) {
Espline <- splinefun(df$hour, df$cum_entry, method = "monoH.FC")
return(Espline(seq(0, 23, 0.1)))
}
net_util %>%
mutate(impute_entry = map(data, spline_wrapper)) %>%
unnest(impute_entry) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1)) -> impute_util
ggplot(impute_util) +
geom_line(aes(hour, impute_entry, col = location)) +
geom_line(data = net_util, aes(hour, entry, col = location), alpha = 0.2)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry)) -> net_util
net_util %>%
select(hour, location, cum_entry) %>%
group_by(location) %>%
nest() -> net_util_nest
spline_wrapper <- function(df) {
Espline <- splinefun(df$hour, df$cum_entry, method = "monoH.FC")
return(Espline(seq(0, 23, 0.1)))
}
net_util_nest %>%
mutate(impute_entry = map(data, spline_wrapper)) %>%
unnest(impute_entry) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1)) -> impute_util
ggplot(impute_util) +
geom_line(aes(hour, impute_entry, col = location)) +
geom_line(data = net_util, aes(hour, entry, col = location), alpha = 0.2)
ggplot() +
geom_line(data = impute_util, aes(hour, impute_entry, col = location)) +
geom_line(data = net_util, aes(hour, entry, col = location), alpha = 0.2)
ggplot() +
geom_line(data = impute_util, aes(hour, impute_entry, col = location)) +
geom_line(data = net_util, aes(hour, entry, col = location), alpha = 0.5)
View(impute_util)
mrt_long %>%
spread(key = "mode", value = "value") %>%
mutate_at(vars(entry:exit), .funs = function(x) ifelse(is.na(x), 0, x)) %>%
group_by(hour, location) %>%
summarise(entry = mean(entry, na.rm = T) %>% floor,
exit = mean(exit, na.rm = T) %>% floor) %>%
group_by(hour, location) %>%
mutate(cum_entry = cumsum(entry),
cum_exit = cumsum(exit)) -> net_util
spline_wrapper <- function(df) {
Espline_entry <- splinefun(df$hour, df$cum_entry, method = "monoH.FC")
Espline_exit <- splinefun(df$hour, df$exit, method = "monoH.FC")
tibble(hour = seq(0, 23, 0.1)) %>%
mutate(entry = Espline_entry(hour),
exit = Espline_exit(hour))
return()
}
net_util_nest %>%
mutate(impute = map(data, spline_wrapper)) %>%
unnest(impute) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1)) -> impute_util
spline_wrapper <- function(df) {
Espline_entry <- splinefun(df$hour, df$cum_entry, method = "monoH.FC")
Espline_exit <- splinefun(df$hour, df$exit, method = "monoH.FC")
tibble(hour = seq(0, 23, 0.1)) %>%
mutate(entry = Espline_entry(hour),
exit = Espline_exit(hour)) %>%
return()
}
net_util_nest %>%
mutate(impute = map(data, spline_wrapper)) %>%
unnest(impute) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1)) -> impute_util
warnings()
View(impute_util)
spline_wrapper <- function(df) {
Espline_entry <- splinefun(df$hour, df$cum_entry, method = "monoH.FC")
Espline_exit <- splinefun(df$hour, df$cum_exit, method = "monoH.FC")
tibble(hour = seq(0, 23, 0.1)) %>%
mutate(entry = Espline_entry(hour),
exit = Espline_exit(hour)) %>%
return()
}
net_util_nest %>%
mutate(impute = map(data, spline_wrapper)) %>%
unnest(impute) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1)) -> impute_util
View(impute_util)
View(net_util)
net_util %>%
select(hour, location, cum_entry, cum_exit) %>%
group_by(location) %>%
nest() -> net_util_nest
spline_wrapper <- function(df) {
Espline_entry <- splinefun(df$hour, df$cum_entry, method = "monoH.FC")
Espline_exit <- splinefun(df$hour, df$cum_exit, method = "monoH.FC")
tibble(hour = seq(0, 23, 0.1)) %>%
mutate(entry = Espline_entry(hour),
exit = Espline_exit(hour)) %>%
return()
}
net_util_nest %>%
mutate(impute = map(data, spline_wrapper)) %>%
unnest(impute) %>%
group_by(location) %>%
mutate(hour = seq(0, 23, 0.1)) -> impute_util
View(impute_util)
?gather
stocks <- tibble(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
gather(stocks, stock, price, -time)
gather(impute_util, mode, volume, location:hour)
gather(impute_util, mode, volume, -location:hour)
gather(impute_util, mode, volume, -(location:hour))
impute_util_long <- gather(impute_util, mode, volume, -(location:hour))
net_util_long <- select(net_util, location, hour, entry, exit) %>%
gather(mode, volume, -(location:hour))
ggplot() +
geom_line(data = impute_util_long, aes(hour, impute_entry, col = location)) +
geom_line(data = net_util_long, aes(hour, entry, col = location), alpha = 0.5) +
facet_wrap(~mode)
ggplot() +
geom_line(data = impute_util_long, aes(hour, entry, col = location)) +
geom_line(data = net_util_long, aes(hour, entry, col = location), alpha = 0.5) +
facet_wrap(~mode)
ggplot() +
geom_line(data = impute_util_long, aes(hour, volume, col = location)) +
geom_line(data = net_util_long, aes(hour, volume, col = location), alpha = 0.5) +
facet_wrap(~mode)
View(impute_util_long)
setwd("~/Personal/useless-hacks/dotter")
library(tidyverse)
library(cowplot)
plot_text <- ggdraw() +
draw_label(input_text, fontface='bold', hjust = 1, size = 16)
input_text <- "Go Wes!"
plot_text <- ggdraw() +
draw_label(input_text, fontface='bold', hjust = 1, size = 16)
plot_text
plot_text <- ggdraw() +
draw_label(input_text, fontface='bold', hjust = 1, size = 50)
plot_text
png("test.png", width = 10, height = 4)
plot_text
dev.off()
png("test.png", width = 10, height = 4, units = "inches")
png("test.png", width = 10, height = 4, units = "in")
plot_text
dev.off()
plot_text <- ggdraw() +
draw_label(input_text, fontface='bold', hjust = 1, size = 30)
png("test.png")
plot_text
dev.off()
library(png)
install.packages("png")
